#!/bin/sh

PANEL_FIFO_BOTTOM=/tmp/panel-bottom-fifo
PANEL_HEIGHT=20

PANEL_FONT_FAMILY="JetBrains Mono Medium"
ICON_FONT="Hack Nerd Font Mono"

if [ $(pgrep -cx panel-bottom) -gt 1 ] ; then
  printf "%s\n" "The panel is already running." >&2
  exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO_BOTTOM" ] && rm "$PANEL_FIFO_BOTTOM"
mkfifo "$PANEL_FIFO_BOTTOM"

# time and date
while true;
do
    echo "D$(date '+%d.%m.%Y %H:%M')"
    sleep 20
done > "$PANEL_FIFO_BOTTOM" &

# battery
while true;
do
    for battery in /sys/class/power_supply/BAT?
    do
        mode=$(cat "$battery"/status)
        percent=$(cat "$battery"/capacity)
        symbol=""

        if [ "$mode" = "Discharging" ]; then
            symbol=''
        elif [ "$mode" = "Charging" ]; then
            symbol=''
        else
            symbol=''
        fi

        echo "B$symbol $percent"
    done
    sleep 5
done > "$PANEL_FIFO_BOTTOM" &

# backlight
lemonlight > "$PANEL_FIFO_BOTTOM" &

# gpu used
lemongpu > "$PANEL_FIFO_BOTTOM" &

# cpu temp
while true;
do
    temp=$(sensors | awk '/^Tdie:/ {print $2}')
    echo "T $temp"
    sleep 10
done > "$PANEL_FIFO_BOTTOM" &

# wifi
while true;
do
    for wifi in /sys/class/net/w*
    do
        state=$(cat "$wifi"/operstate)

        if [ "$state" = "up" ]; then # if connected
            echo "W直  "
        else
            echo "W睊   "
        fi
    done
    sleep 10
done > "$PANEL_FIFO_BOTTOM" &

# network traffic
while true;
do
    update() {
    sum=0
    for arg; do
        read -r i < "$arg"
        sum=$(( sum + i ))
    done
    cache=${XDG_CACHE_HOME:-$HOME/.cache}/${1##*/}
    [ -f "$cache" ] && read -r old < "$cache" || old=0
    printf %d\\n "$sum" > "$cache"
    printf %d\\n $(( sum - old ))
    }

    rx=$(update /sys/class/net/[ew]*/statistics/rx_bytes)
    tx=$(update /sys/class/net/[ew]*/statistics/tx_bytes)

    printf "N%5sB 祝%5sB\\n" $(numfmt --to=iec $rx) $(numfmt --to=iec $tx)
    sleep 5
done > "$PANEL_FIFO_BOTTOM" &

# 
# volume
# initial volume
lemonvol > "$PANEL_FIFO_BOTTOM" &
# python volume watcher
lemonvol.py > "$PANEL_FIFO_BOTTOM" &

. panel_colors

bspc config bottom_padding $PANEL_HEIGHT

cat "$PANEL_FIFO_BOTTOM" | panel-bar-bottom | lemonbar -b -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY"-8 -f "$ICON_FONT"-8 -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u 2 | bash &

sleep 1
# make lemonbar appear below windows
xdo above -t $(xdo id -n root) $(xdo id -n lemonbar)

wait
